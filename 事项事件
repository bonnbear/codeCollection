<template>
  <div class="calendar-container">
    <div class="row header-row">
      <div class="column fixed-column">事项类别</div>
      <div v-for="month in monthNames" :key="month" class="column month-column">
        {{ month }}
      </div>
    </div>
    <div v-for="category in categories" :key="category.key" class="row">
      <div class="column fixed-column">{{ category.name }}</div>
      <div v-for="monthIndex in 12" :key="monthIndex" class="column month-column">
        <div v-for="item in processedData[category.key][monthIndex]" :key="item.id" class="item-card">
          <el-popover placement="top-start" :width="250" trigger="hover">
            <template #default>
              <div v-for="(value, key) in item" :key="key">
                <strong>{{ key }}:</strong> {{ value }}
              </div>
            </template>
            <template #reference>
              <div class="item-title">{{ item.displayTitle }}</div>
            </template>
          </el-popover>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, watch } from 'vue'
import { ElPopover } from 'element-plus'
import 'element-plus/dist/index.css'

const dataObj = ref({
  employees: [
    { id: 1, name: 'John Doe', position: 'Manager', salary: 80000, date: '2023-06-15' },
    { id: 2, name: 'Jane Smith', position: 'Developer', salary: 75000, date: '2023-07-01' },
    { id: 3, name: 'Mike Johnson', position: 'Designer', salary: 60000, date: '2023-08-10' }
  ],
  projects: [
    { id: 1, name: 'Project A', status: 'In Progress', budget: 100000, date: '2023-06-20' },
    { id: 2, name: 'Project B', status: 'Completed', budget: 150000, date: '2023-07-15' },
    { id: 3, name: 'Project C', status: 'Planning', budget: 200000, date: '2023-08-05' }
  ],
  tasks: [
    { id: 1, title: 'Task 1', assignee: 'John Doe', dueDate: '2023-06-30' },
    { id: 2, title: 'Task 2', assignee: 'Jane Smith', dueDate: '2023-07-15' },
    { id: 3, title: 'Task 3', assignee: 'Mike Johnson', dueDate: '2023-08-01' },
    { id: 4, title: 'Task 4', assignee: 'John Doe', dueDate: '2023-07-10' }
  ]
})

const monthNames = [
  '一月', '二月', '三月', '四月', '五月', '六月',
  '七月', '八月', '九月', '十月', '十一月', '十二月'
]

const categories = [
  { key: 'employees', name: '员工' },
  { key: 'projects', name: '项目' },
  { key: 'tasks', name: '任务' }
]

const processedData = ref({})

const processData = () => {
  const result = {}
  categories.forEach(category => {
    result[category.key] = Array(12).fill().reduce((acc, _, index) => {
      acc[index + 1] = []
      return acc
    }, {})
  })

  Object.entries(dataObj.value).forEach(([key, items]) => {
    items.forEach(item => {
      const date = new Date(key === 'tasks' ? item.dueDate : item.date)
      const monthIndex = date.getMonth() + 1 // 将0-11转换为1-12
      const displayTitle = item.name || item.title || `ID: ${item.id}`
      result[key][monthIndex].push({ ...item, displayTitle })
    })
  })

  processedData.value = result
}

watch(dataObj, processData, { immediate: true, deep: true })
</script>

<style scoped>
.calendar-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  font-family: Arial, sans-serif;
}

.row {
  display: flex;
  width: 100%;
}

.header-row {
  font-weight: bold;
  background-color: #f0f0f0;
}

.column {
  border: 1px solid #eaeaea;
  padding: 10px;
  flex-grow: 1;
  overflow: hidden;
}

.fixed-column {
  width: 120px;
  flex-shrink: 0;
  text-align: center;
  font-weight: bold;
  background-color: #f0f0f0;
}

.month-column {
  width: 200px;
  text-align: center;
}

.item-card {
  margin: 5px 0;
  padding: 5px;
  background-color: #e6f7ff;
  border-radius: 4px;
  font-size: 12px;
}

.item-title {
  cursor: pointer;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
</style>
