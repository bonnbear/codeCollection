<template>
  <div class="tabs-container">
    <div class="tabs">
      <button
        v-for="tab in tabs"
        :key="tab.id"
        @click="currentTab = tab.id"
        :class="{ active: currentTab === tab.id }"
      >
        {{ tab.name }}
      </button>
    </div>
    <div class="tab-content">
      <template v-for="tab in tabs" :key="tab.id">
        <div v-show="currentTab === tab.id">
          <h2>{{ tab.name }}内容</h2>
          <div class="card-grid">
            <div
              v-for="item in tab.items"
              :key="item.id"
              class="card"
              :class="{ selected: isSelected(item) }"
              @click="toggleSelection(item)"
            >
              <div class="card-thumbnail" :style="{ backgroundColor: item.color }">
                <!-- 添加选中图标 -->
                <div class="selected-icon" v-if="isSelected(item)">✓</div>
                {{ item.name.charAt(0) }}
              </div>
              <div class="card-description">
                {{ item.name }}
              </div>
            </div>
          </div>
        </div>
      </template>
    </div>
    <div class="selected-items">
      <h3>已选中的项目:</h3>
      <ul>
        <li v-for="item in selectedItems" :key="item.id">
          {{ item.name }} ({{ tabs.find(tab => tab.id === item.tabId).name }})
          <button class="delete-btn" @click="removeSelection(item)">
            &#10005;
          </button>
        </li>
      </ul>
    </div>
  </div>
</template>

<script setup>
import { ref, computed } from 'vue'

const tabs = [
  {
    id: 'personal',
    name: '个人',
    items: [
      { id: 'p1', name: '个人项目1', tabId: 'personal', color: '#FFB3BA' },
      { id: 'p2', name: '个人项目2', tabId: 'personal', color: '#BAFFC9' },
      { id: 'p3', name: '个人项目3', tabId: 'personal', color: '#BAE1FF' },
    ]
  },
  {
    id: 'common',
    name: '通用',
    items: [
      { id: 'c1', name: '通用项目1', tabId: 'common', color: '#FFFFBA' },
      { id: 'c2', name: '通用项目2', tabId: 'common', color: '#FFD6B3' },
      { id: 'c3', name: '通用项目3', tabId: 'common', color: '#E1BAFF' },
    ]
  },
  {
    id: 'all',
    name: '全部',
    items: [
      { id: 'a1', name: '全部项目1', tabId: 'all', color: '#B3FFF0' },
      { id: 'a2', name: '全部项目2', tabId: 'all', color: '#FFB3D9' },
      { id: 'a3', name: '全部项目3', tabId: 'all', color: '#D9FFB3' },
    ]
  }
]

const currentTab = ref('personal')
const selectedItems = ref([])

const isSelected = (item) => {
  return selectedItems.value.some(i => i.id === item.id)
}

const toggleSelection = (item) => {
  const index = selectedItems.value.findIndex(i => i.id === item.id)
  if (index === -1) {
    selectedItems.value.push(item)
  } else {
    selectedItems.value.splice(index, 1)
  }
}

const removeSelection = (item) => {
  const index = selectedItems.value.findIndex(i => i.id === item.id)
  if (index !== -1) {
    selectedItems.value.splice(index, 1)
  }
}
</script>

<style scoped>
.tabs-container {
  max-width: 800px;
  margin: 0 auto;
}
.tabs {
  display: flex;
  border-bottom: 1px solid #ccc;
}
.tabs button {
  padding: 10px 20px;
  border: none;
  background-color: transparent;
  cursor: pointer;
}
.tabs button.active {
  border-bottom: 2px solid #007bff;
  color: #007bff;
}
.tab-content {
  padding: 20px;
}
.card-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  gap: 15px;
}
.card {
  border: 1px solid #ccc;
  border-radius: 8px;
  overflow: hidden;
  cursor: pointer;
  transition: box-shadow 0.3s, transform 0.3s;
}
.card:hover {
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  transform: translateY(-2px);
}
.card.selected {
  border-color: #007bff;
  box-shadow: 0 0 0 2px #007bff;
}
.card-thumbnail {
  height: 100px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 36px;
  color: white;
  text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
  position: relative;
}
.selected-icon {
  position: absolute;
  top: 5px;
  right: 5px;
  background-color: #007bff;
  color: white;
  border-radius: 50%;
  width: 24px;
  height: 24px;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 14px;
  font-weight: bold;
}
.card-description {
  padding: 10px;
  text-align: center;
  background-color: white;
}
.selected-items {
  margin-top: 20px;
  border-top: 1px solid #ccc;
  padding-top: 20px;
}
.selected-items ul {
  list-style-type: none;
  padding: 0;
}
.selected-items li {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 5px 0;
}
.delete-btn {
  background-color: #ff4d4d;
  color: white;
  border: none;
  border-radius: 50%;
  width: 20px;
  height: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  font-size: 12px;
  padding: 0;
  line-height: 1;
}
.delete-btn:hover {
  background-color: #ff1a1a;
}
</style>
