<template>
  <div id="app">
    <button @click="showModal = true">打开表格</button>
    
    <!-- 模态框 -->
    <div v-if="showModal" class="modal-overlay">
      <div class="modal-content" ref="modalContent">
        <div class="modal-header">
          <h2>表格数据</h2>
          <button @click="showModal = false" class="close-button">&times;</button>
        </div>
        <div class="table-container">
          <div class="table-scroll-container">
            <table>
              <thead>
                <tr>
                  <th v-for="header in headers" :key="header">{{ header }}</th>
                </tr>
              </thead>
              <tbody>
                <tr v-for="(row, index) in rows" :key="index">
                  <td v-for="(cell, cellIndex) in row" :key="cellIndex">{{ cell }}</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import { ref, onMounted, onUnmounted } from 'vue'

export default {
  name: 'App',
  setup() {
    const showModal = ref(false)
    const modalContent = ref(null)
    
    const headers = ['姓名', '年龄', '城市']
    const rows = [
      ['张三', '30', '北京'],
      ['李四', '25', '上海'],
      ['王五', '35', '广州'],
      ['赵六', '28', '深圳'],
      ['钱七', '32', '杭州'],
      ...Array(20).fill(0).map((_, i) => [`用户${i+6}`, `${20+i}`, '其他城市'])
    ]
    
    return {
      showModal,
      modalContent,
      headers,
      rows
    }
  }
}
</script>

<style scoped>
#app {
  font-family: Arial, sans-serif;
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.modal-content {
  background-color: white;
  border-radius: 8px;
  width: 80%;
  height: 80%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background-color: #f2f2f2;
  border-bottom: 1px solid #ddd;
}

.modal-header h2 {
  margin: 0;
}

.close-button {
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
}

.table-container {
  flex-grow: 1;
  padding: 20px;
  overflow: hidden;
}

.table-scroll-container {
  height: 100%;
  overflow-y: auto;
}

table {
  width: 100%;
  border-collapse: collapse;
}

thead {
  position: sticky;
  top: 0;
  background-color: #f2f2f2;
  z-index: 1;
}

th, td {
  border: 1px solid #ddd;
  padding: 8px;
  text-align: left;
}

th {
  background-color: #f2f2f2;
}

tbody tr:nth-child(even) {
  background-color: #f9f9f9;
}

button {
  padding: 10px 15px;
  background-color: #4CAF50;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

button:hover {
  background-color: #45a049;
}
</style>
