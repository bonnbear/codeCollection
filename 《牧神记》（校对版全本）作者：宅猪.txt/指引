<template>
  <div class="app-container">
    <!-- 标题区域 -->
    <div class="header-section">
      <h2>权限管理</h2>
      <el-button @click="restartTour" type="primary" size="small">
        <el-icon><Refresh /></el-icon>
        重新查看引导
      </el-button>
    </div>

    <!-- 权限选择区域 -->
    <div class="permission-section">
      <div class="form-item">
        <label class="form-label">
          选择权限
          <el-badge v-if="hasNewPermission" is-dot class="permission-badge">
            <el-icon color="#409EFF"><InfoFilled /></el-icon>
          </el-badge>
        </label>
        
        <el-select
          ref="permissionSelectRef"
          v-model="selectedPermission"
          placeholder="请选择权限"
          class="permission-select"
          :popper-class="tourActive ? 'tour-select-dropdown' : ''"
          @change="handlePermissionChange"
          @visible-change="handleVisibleChange"
        >
          <el-option
            v-for="item in permissions"
            :key="item.value"
            :label="item.label"
            :value="item.value"
            :class="{ 'highlighted-option': item.isNew && tourActive }"
          >
            <div class="option-content">
              <span>{{ item.label }}</span>
              <el-tag v-if="item.isNew" type="danger" size="small" effect="plain">
                新增
              </el-tag>
            </div>
          </el-option>
        </el-select>
      </div>

      <div class="selected-info" v-if="selectedPermission">
        <el-alert
          :title="`当前选择: ${getPermissionLabel(selectedPermission)}`"
          type="info"
          :closable="false"
        />
      </div>
    </div>

    <!-- 
      【关键修正】: 移除了模板中导致解析错误的中文注释。
      相关属性的解释已移至 <script> 部分。
    -->
    <el-popover
      ref="popoverRef"
      :visible="popoverVisible"
      trigger="manual"
      effect="light"
      placement="right"
      :virtual-ref="popoverVirtualRef"
      virtual-triggering
      :popper-options="popperOptions"
      :width="300"
      :persistent="true"
      :hide-after="0"
    >
      <div class="guide-content">
        <h4>🎉 新权限提醒</h4>
        <p>系统新增了“超级管理员”权限，请在下方展开的列表中点击选择。</p>
        <el-button type="primary" size="small" @click="handlePopoverClose">
          知道了
        </el-button>
      </div>
    </el-popover>

    <!-- 遮罩层 -->
    <div v-if="tourActive" class="tour-mask"></div>
  </div>
</template>

<script setup>
import { ref, onMounted, nextTick, onUnmounted } from 'vue'
import { ElMessage } from 'element-plus'
import { Refresh, InfoFilled } from '@element-plus/icons-vue'

const permissionSelectRef = ref(null)
const popoverRef = ref(null) 

const selectedPermission = ref('')
const hasNewPermission = ref(true)
const tourActive = ref(false)

const popoverVisible = ref(false)
const popoverVirtualRef = ref(null)

const popperOptions = {
  strategy: 'fixed',
  modifiers: [{ name: 'offset', options: { offset: [0, 12] } }],
}

const permissions = ref([
  { value: 'read', label: '只读权限', isNew: false },
  { value: 'write', label: '编辑权限', isNew: false },
  { value: 'delete', label: '删除权限', isNew: false },
  { value: 'admin', label: '管理员权限', isNew: false },
  { value: 'super_admin', label: '超级管理员', isNew: true }
])

const getPermissionLabel = (value) => {
  const p = permissions.value.find(p => p.value === value)
  return p ? p.label : ''
}

const startTour = async () => {
  tourActive.value = true
  popoverVisible.value = false
  await nextTick()

  if (permissionSelectRef.value) {
    popoverVirtualRef.value = permissionSelectRef.value.$el
    popoverVisible.value = true

    permissionSelectRef.value.visible = true

    await nextTick()
    scrollToNewOption()
  }
}

const handleVisibleChange = (visible) => {
  if (tourActive.value && !visible) {
    setTimeout(() => {
      if (permissionSelectRef.value) {
        permissionSelectRef.value.visible = true
      }
    }, 0)
  }
}

const scrollToNewOption = () => {
  const dropdown = document.querySelector('.tour-select-dropdown')
  const newOption = dropdown?.querySelector('.highlighted-option')
  if (newOption) {
    newOption.scrollIntoView({ behavior: 'smooth', block: 'center' })
  }
}

const restartTour = () => {
  if (permissionSelectRef.value) {
    permissionSelectRef.value.visible = false
  }
  hasNewPermission.value = true
  permissions.value.forEach(p => {
    if (p.value === 'super_admin') p.isNew = true
  })
  selectedPermission.value = ''
  popoverVisible.value = false
  tourActive.value = false

  setTimeout(() => startTour(), 300)
}

// 结束引导的核心函数
const handlePopoverClose = () => {
  tourActive.value = false 
  popoverVisible.value = false 

  if (permissionSelectRef.value) {
    permissionSelectRef.value.visible = false
  }

  ElMessage.success('引导已完成，您可以随时选择新权限')
  localStorage.setItem('permission_tour_viewed', 'true')
}

const handlePermissionChange = (value) => {
  const p = permissions.value.find(p => p.value === value)
  if (p && p.isNew) {
    ElMessage.success(`您已选择新权限: ${p.label}`)
    p.isNew = false
    hasNewPermission.value = false
    
    if (tourActive.value) {
      handlePopoverClose()
    }
  }
}

const handleResize = () => {
  if (popoverVisible.value) {
    popoverRef.value?.updatePopper?.()
  }
}

onMounted(() => {
  const tourViewed = localStorage.getItem('permission_tour_viewed')
  if (!tourViewed) {
    setTimeout(() => startTour(), 500)
  }
  window.addEventListener('resize', handleResize)
})

onUnmounted(() => {
  window.removeEventListener('resize', handleResize)
})
</script>

<style scoped>
/* 所有样式保持不变 */
.app-container {
  padding: 20px;
  max-width: 800px;
  margin: 0 auto;
  position: relative;
}
.header-section {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 30px;
  padding-bottom: 15px;
  border-bottom: 1px solid #e4e7ed;
}
.header-section h2 { margin: 0; color: #303133; }
.permission-section {
  background: #fff;
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);
  position: relative;
  z-index: 1001; 
}
.form-item { margin-bottom: 20px; }
.form-label {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 10px;
  font-size: 14px;
  color: #606266;
  font-weight: 500;
}
.permission-badge { margin-left: 5px; }
.permission-badge :deep(.el-badge__content) {
  background-color: #f56c6c;
  animation: pulse 2s infinite;
}
.permission-select { width: 100%; }
.option-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}
.selected-info { margin-top: 20px; }
.guide-content h4 { margin: 0 0 8px 0; font-size: 16px; font-weight: 600; color: #303133; }
.guide-content p { margin: 0 0 12px 0; font-size: 14px; line-height: 1.5; color: #606266; }
.tour-mask {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.3);
  z-index: 1000;
  animation: fadeIn 0.2s ease;
}
@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
@keyframes pulse {
  0% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.2); opacity: 0.7; }
  100% { transform: scale(1); opacity: 1; }
}
</style>

<style>
/* 全局样式也保持不变 */
.tour-select-dropdown { z-index: 3001 !important; }
.tour-select-dropdown .highlighted-option {
  background: linear-gradient(90deg, #fef3c7 0%, #fde68a 100%) !important;
  position: relative;
  animation: highlightPulse 2s ease-in-out infinite;
}
.tour-select-dropdown .highlighted-option::before {
  content: '👉';
  position: absolute;
  left: -25px;
  top: 50%;
  transform: translateY(-50%);
  font-size: 20px;
  animation: pointing 1s ease-in-out infinite;
}
@keyframes highlightPulse {
  0%, 100% { 
    background: linear-gradient(90deg, #fef3c7 0%, #fde68a 100%);
    box-shadow: inset 0 0 0 2px rgba(251, 191, 36, 0.3);
  }
  50% { 
    background: linear-gradient(90deg, #fed7aa 0%, #fbbf24 100%);
    box-shadow: inset 0 0 0 2px rgba(251, 191, 36, 0.5);
  }
}
@keyframes pointing {
  0%, 100% { transform: translateY(-50%) translateX(0); }
  50% { transform: translateY(-50%) translateX(5px); }
}
.el-select-dropdown__item.highlighted-option:hover {
  background: linear-gradient(90deg, #fed7aa 0%, #fbbf24 100%) !important;
}
</style>
