<template>
  <div ref="chartRef" style="height: 400px;"></div>
</template>

<script setup>
import { ref, onMounted, onUnmounted } from 'vue'
import * as echarts from 'echarts'

const chartRef = ref(null)
let myChart = null

onMounted(() => {
  myChart = echarts.init(chartRef.value)
  
  const option = {
    grid: {
      left: '3%',
      right: '4%',
      bottom: '3%',
      containLabel: true,
      show: true,
      backgroundColor: 'rgba(0, 0, 0, 0.05)'
    },
    tooltip: {
      show: false // 关闭默认的 tooltip
    },
    xAxis: {
      type: 'category',
      data: ['很长的文字测试一下省略号1', '很长的文字测试一下省略号2', '很长的文字测试一下省略号3', 
             '很长的文字测试一下省略号4', '很长的文字测试一下省略号5', '很长的文字测试一下省略号6', 
             '很长的文字测试一下省略号7'],
      axisLabel: {
        interval: 0,
        width: 80,
        overflow: 'truncate',
        ellipsis: '...'
      },
      axisPointer: {
        show: true,
        type: 'none', // 不显示指示线
        label: {
          show: true,
          backgroundColor: '#555',
          padding: [5, 8],
          formatter: function(params) {
            return params.value;
          }
        }
      },
      axisLine: {
        lineStyle: {
          color: '#999'
        }
      }
    },
    yAxis: {
      type: 'value',
      max: 9,
      splitLine: {
        lineStyle: {
          type: 'dashed'
        }
      },
      axisLine: {
        show: true,
        lineStyle: {
          color: '#999'
        }
      },
      axisPointer: {
        show: false
      }
    },
    series: [
      {
        data: [3, 7, 5, 8, 4, 6, 2],
        type: 'bar',
        barWidth: '40%',
        itemStyle: {
          color: '#5470c6'
        },
        showBackground: true,
        backgroundStyle: {
          color: 'rgba(180, 180, 180, 0.2)'
        }
      }
    ]
  }

  myChart.setOption(option)
})

const handleResize = () => {
  myChart?.resize()
}

window.addEventListener('resize', handleResize)

onUnmounted(() => {
  window.removeEventListener('resize', handleResize)
  myChart?.dispose()
})
</script>